[{"C:\\Users\\User\\Desktop\\twitter\\src\\index.js":"1","C:\\Users\\User\\Desktop\\twitter\\src\\components\\App.js":"2","C:\\Users\\User\\Desktop\\twitter\\src\\components\\Router.js":"3","C:\\Users\\User\\Desktop\\twitter\\src\\routes\\Home.js":"4","C:\\Users\\User\\Desktop\\twitter\\src\\routes\\Auth.js":"5","C:\\Users\\User\\Desktop\\twitter\\src\\fbase.js":"6","C:\\Users\\User\\Desktop\\twitter\\src\\components\\Navigation.js":"7","C:\\Users\\User\\Desktop\\twitter\\src\\routes\\Profile.js":"8","C:\\Users\\User\\Desktop\\twitter\\src\\components\\Tweet.js":"9","C:\\Users\\User\\Desktop\\twitter\\src\\components\\TweetFactory.js":"10","C:\\Users\\User\\Desktop\\twitter\\src\\components\\AuthSocial.js":"11","C:\\Users\\User\\Desktop\\twitter\\src\\components\\AuthEmail.js":"12"},{"size":242,"mtime":1609854936782,"results":"13","hashOfConfig":"14"},{"size":1659,"mtime":1610193259433,"results":"15","hashOfConfig":"14"},{"size":1041,"mtime":1610116854535,"results":"16","hashOfConfig":"14"},{"size":1428,"mtime":1610205487071,"results":"17","hashOfConfig":"14"},{"size":2243,"mtime":1610025352784,"results":"18","hashOfConfig":"14"},{"size":688,"mtime":1609163311763,"results":"19","hashOfConfig":"14"},{"size":3281,"mtime":1610211949291,"results":"20","hashOfConfig":"14"},{"size":2480,"mtime":1610116911854,"results":"21","hashOfConfig":"14"},{"size":3659,"mtime":1610194102967,"results":"22","hashOfConfig":"14"},{"size":4656,"mtime":1610194026134,"results":"23","hashOfConfig":"14"},{"size":1505,"mtime":1609999176600,"results":"24","hashOfConfig":"14"},{"size":1707,"mtime":1610001754985,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1kncpmc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\User\\Desktop\\twitter\\src\\index.js",[],["54","55"],"C:\\Users\\User\\Desktop\\twitter\\src\\components\\App.js",[],"C:\\Users\\User\\Desktop\\twitter\\src\\components\\Router.js",["56"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Auth from \"routes/Auth\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home isLoggedIn={isLoggedIn} userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile\r\n                isLoggedIn={isLoggedIn}\r\n                userObj={userObj}\r\n                refreshUser={refreshUser}\r\n              />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","C:\\Users\\User\\Desktop\\twitter\\src\\routes\\Home.js",[],"C:\\Users\\User\\Desktop\\twitter\\src\\routes\\Auth.js",[],"C:\\Users\\User\\Desktop\\twitter\\src\\fbase.js",[],"C:\\Users\\User\\Desktop\\twitter\\src\\components\\Navigation.js",["57"],"C:\\Users\\User\\Desktop\\twitter\\src\\routes\\Profile.js",[],"C:\\Users\\User\\Desktop\\twitter\\src\\components\\Tweet.js",["58"],"import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTrashAlt,\r\n  faEdit,\r\n  faEllipsisH,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Tweet = ({ tweetObj, userObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newTweet, setNewTweet] = useState(tweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete thie tweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`tweets/${tweetObj.id}`).delete();\r\n      await storageService.refFromURL(tweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onEditTweet = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`tweets/${tweetObj.id}`).update({\r\n      text: newTweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setNewTweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onEditTweet}>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Edit your tweet\"\r\n                  value={newTweet}\r\n                  required\r\n                  onChange={onChange}\r\n                />\r\n                <input type=\"submit\" value=\"Update\" />\r\n                <input onClick={toggleEditing} type=\"button\" value=\"Cancel\" />\r\n              </form>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"tweet__container\">\r\n          <img\r\n            src={userObj.photoURL}\r\n            alt={userObj.displayName}\r\n            className=\"profile__image\"\r\n          />\r\n          <div className=\"tweet__object\">\r\n            <div className=\"tweet__object__container\">\r\n              <div>\r\n                <span className=\"tweet__displayName\">\r\n                  {tweetObj.displayName}\r\n                </span>\r\n                <span className=\"tweet__nickname\">@{tweetObj.displayName}</span>\r\n                <span className=\"tweet__createdAt\">\r\n                  <span>Â·</span>\r\n                  {tweetObj.createdAt.substring(6, 8)},\r\n                  {tweetObj.createdAt.substring(4, 6)},\r\n                  {tweetObj.createdAt.substring(0, 4)}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                {isOwner && (\r\n                  <>\r\n                    <button\r\n                      onClick={onDeleteClick}\r\n                      className=\"tweet__button button\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrashAlt} className=\"icon\" />\r\n                    </button>\r\n                    <button\r\n                      onClick={toggleEditing}\r\n                      className=\"tweet__button button\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faEdit} className=\"icon\" />\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"tweet__text__container\">\r\n              <div className=\"tweet__text\">{tweetObj.text}</div>\r\n            </div>\r\n            <div>\r\n              {tweetObj.attachmentUrl && (\r\n                <img\r\n                  src={tweetObj.attachmentUrl}\r\n                  alt={tweetObj.displayName}\r\n                  className=\"tweet__attachment\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","C:\\Users\\User\\Desktop\\twitter\\src\\components\\TweetFactory.js",["59"],"import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faImages } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst TweetFactory = ({ userObj }) => {\r\n  const [tweet, setTweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.email}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const getTime = () => {\r\n      const date = new Date();\r\n      const year = date.getFullYear();\r\n      const month = date.getMonth() + 1;\r\n      const day = date.getDate();\r\n      const hours = date.getHours();\r\n      const minutes = date.getMinutes();\r\n      const seconds = date.getSeconds();\r\n      let milliseconds = date.getMilliseconds();\r\n      if (milliseconds < 10) {\r\n        milliseconds = `00${milliseconds}`;\r\n      } else if (milliseconds < 100) {\r\n        milliseconds = `0${milliseconds}`;\r\n      } else {\r\n        milliseconds = milliseconds;\r\n      }\r\n      const currentTime = `${year}${month < 10 ? `0${month}` : month}${\r\n        day < 10 ? `0${day}` : day\r\n      }${hours < 10 ? `0${hours}` : hours}${\r\n        minutes < 10 ? `0${minutes}` : minutes\r\n      }${seconds < 10 ? `0${seconds}` : seconds}${milliseconds}`;\r\n      return currentTime;\r\n    };\r\n    const tweetObj = {\r\n      text: tweet,\r\n      createdAt: getTime(),\r\n      attachmentUrl,\r\n      userId: userObj.uid,\r\n      displayName: userObj.displayName,\r\n      photoURL: userObj.photoURL,\r\n    };\r\n    await dbService\r\n      .collection(\"tweets\")\r\n      .doc(`${10 ** 17 - Number(tweetObj.createdAt)}${tweetObj.userId}`)\r\n      .set(tweetObj);\r\n    setTweet(\"\");\r\n    setAttachment(\"\");\r\n    console.log(tweetObj.createdAt.length);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const { value } = event.target;\r\n    setTweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const { files } = event.target;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (event) => {\r\n      const { result } = event.currentTarget;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const clearAttachment = () => setAttachment(null);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} div className=\"tweetFactory__container\">\r\n        <img\r\n          src={userObj.photoURL}\r\n          alt={userObj.displayName}\r\n          className=\"profile__image\"\r\n        />\r\n        <div className=\"tweetFactory__input\">\r\n          <div>\r\n            <input\r\n              value={tweet}\r\n              onChange={onChange}\r\n              type=\"text\"\r\n              placeholder=\"What's on your mind?\"\r\n              maxLength={120}\r\n              className=\"tweetFactory__input__text\"\r\n            />\r\n          </div>\r\n          <div>\r\n            {attachment && (\r\n              <>\r\n                <div>\r\n                  <img\r\n                    src={attachment}\r\n                    alt={userObj.displayName}\r\n                    className=\"tweetFactory__attachment\"\r\n                  />\r\n                </div>\r\n                <button\r\n                  onClick={clearAttachment}\r\n                  className=\"tweetFactory__attachment__button button\"\r\n                >\r\n                  <FontAwesomeIcon icon={faTimes} className=\"icon\" />\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"tweetFactory__input__container\">\r\n            <label\r\n              for=\"tweetFactory__input__file\"\r\n              className=\"tweetFactory__input__label container button\"\r\n            >\r\n              <FontAwesomeIcon icon={faImages} className=\"icon\" />\r\n            </label>\r\n            <input\r\n              onChange={onFileChange}\r\n              type=\"file\"\r\n              id=\"tweetFactory__input__file\"\r\n              accept=\"image/*\"\r\n              className=\"tweetFactory__input__file\"\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"tweetFactory__input__file tweetFactory__input__button container\"\r\n            >\r\n              Tweet\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div className=\"tweetFactory__line\"></div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TweetFactory;\r\n","C:\\Users\\User\\Desktop\\twitter\\src\\components\\AuthSocial.js",[],"C:\\Users\\User\\Desktop\\twitter\\src\\components\\AuthEmail.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":11,"column":8,"nodeType":"66","messageId":"67","endLine":11,"endColumn":18},{"ruleId":"68","severity":1,"message":"69","line":101,"column":13,"nodeType":"70","endLine":106,"endColumn":15},{"ruleId":"64","severity":1,"message":"71","line":7,"column":3,"nodeType":"66","messageId":"67","endLine":7,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":35,"column":24,"nodeType":"66","messageId":"74","endLine":35,"endColumn":36},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Navigation' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'faEllipsisH' is defined but never used.","no-self-assign","'milliseconds' is assigned to itself.","selfAssignment","no-global-assign","no-unsafe-negation"]